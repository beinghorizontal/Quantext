import torch
from TTS.api import TTS

# Get device
device = "cuda" if torch.cuda.is_available() else "cpu"

# List available üê∏TTS models
print(TTS().list_models())

# Init TTS
tts = TTS("tts_models/multilingual/multi-dataset/xtts_v2").to(device)

# Run TTS
# ‚ùó Since this model is multi-lingual voice cloning model, we must set the target speaker_wav and language
# Text to speech list of amplitude values as output
#wav = tts.tts(text="Hello world!", speaker_wav="my/cloning/audio.wav", language="en")
# Text to speech to a file
tts.tts_to_file(text="It is a capital mistake to theorize before one has data. Insensibly one begins to twist "
                     "facts to suit theories, instead of theories to suit facts",
                speaker_wav=r"D:\demos\ttstest.wav", language="en", file_path="d:/demos/sherlock_output.wav")

tts.tts_to_file(text="‡§ú‡§ø‡§Ç‡§¶‡§ó‡•Ä ‡§Æ‡•á‡§Ç ‡§Ö‡§ó‡§∞ ‡§∏‡§´‡§≤ ‡§π‡•ã‡§®‡§æ ‡§π‡•à ‡§§‡•ã ‡§Ö‡§ö‡•ç‡§õ‡•á ‡§¶‡§ø‡§Æ‡§æ‡§ó ‡§ï‡•á ‡§∏‡§æ‡§• ‡§§‡§Ç‡§¶‡§∞‡•Å‡§∏‡•ç‡§§ ‡§≠‡•Ä ‡§∞‡§π‡§®‡§æ ‡§ú‡§∞‡•Å‡§∞‡•Ä ‡§π‡•à. ‡§î‡§∞ ‡§Ü‡§™ ‡§¶‡•á‡§ñ ‡§∞‡§π‡•á ‡§π‡•à ‡§Æ‡•á‡§∞‡§æ ‡§Ø‡•Ç‡§ü‡•ç‡§Ø‡•Ç‡§¨ ‡§ö‡•à‡§®‡§≤ ‡§ï‡•â‡§®‡•ç‡§ü‡•á‡§ï‡•ç‡§∏‡•ç‡§ü",
                speaker_wav=r"D:\demos\amitabh_clean_voice.wav", language="hi", file_path="d:/demos/amitabh_output.wav")
